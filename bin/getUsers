#!/usr/bin/env node

'use strict';

var http = require('http');
var https = require('https');
var redis = require('redis');
var gravatar = require('gravatar');
var async = require('async');

var shared = require('./../shared');
var nconf = shared.nconf;
var client = shared.redisClient;

var LIMIT = 100;
var DOMAIN = nconf.get('mozilliansURL');
var API_URL = DOMAIN + '/api/v1/users/?limit=' + LIMIT +
              '&app_name=' + nconf.get('apiApp') + '&is_vouched=true&app_key=' +
              nconf.get('apiKey');

var options = {
  host: nconf.get('mozilliansURL').split('://')[1],
  headers: {accept: 'application/json, text/plain, */*'},
  path: API_URL,
  method: 'GET'
};

// Save user to redis
var setUser = function (user, next) {
  var avatar = user.photo || '';
  var email = user.email.toLowerCase();
  var country = '';

  if (!email) {
    next('No email');
    return;
  }

  if (!avatar) {
    avatar = gravatar.url(email, {
      d: nconf.get('domain') + '/default_avatar.png'
    });
  }

  if (user.country) {
    country = user.country.toString().toUpperCase();
  }

  client.hmset('user:' + email, {
    fullName: user.full_name,
    username: user.username,
    email: user.email,
    avatar: avatar,
    region: user.region,
    country: country
  }, function (err) {
    if (err) {
      console.log('Could not save user ', err);
      next(err);
      return
    }
    client.sadd('emails', email);
    console.log('user: %s', email);
    next();
  });
};

var getUsers = function (callback) {
  var finished = false;
  https.get(options, function (backendResponse) {
    var data = [];

    backendResponse.on('data', function (chunk) {
      data.push(chunk);
    });

    backendResponse.on('end', function () {
      var result = JSON.parse(data.join(''));

      if (result.meta.next === null) {
        finished = true;
      } else {
        options.path = DOMAIN + result.meta.next;
      }

      if (result) {
        async.each(result.objects, setUser, function(err) {
          // console.log('user batch: %d', Object.keys(result.objects).length);
          callback(finished);
        });
      }
    });
  });
};

(function getMoreUsers() {
  getUsers(function (finished) {
    if (!finished) {
      getMoreUsers();
    } else {
      console.log('getUsers success');
      process.exit();
    }
  });
}());
